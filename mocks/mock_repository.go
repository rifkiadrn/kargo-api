// Code generated by MockGen. DO NOT EDIT.
// Source: repository/repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/kargo-api/models"
	reflect "reflect"
)

// MockRepository is a mock of Repository interface
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// GetJobs mocks base method
func (m *MockRepository) GetJobs() ([]models.Job, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJobs")
	ret0, _ := ret[0].([]models.Job)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJobs indicates an expected call of GetJobs
func (mr *MockRepositoryMockRecorder) GetJobs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJobs", reflect.TypeOf((*MockRepository)(nil).GetJobs))
}

// GetBids mocks base method
func (m *MockRepository) GetBids(jobID int64) ([]models.Bid, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBids", jobID)
	ret0, _ := ret[0].([]models.Bid)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBids indicates an expected call of GetBids
func (mr *MockRepositoryMockRecorder) GetBids(jobID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBids", reflect.TypeOf((*MockRepository)(nil).GetBids), jobID)
}
